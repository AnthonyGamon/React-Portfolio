{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/anthonygamon/git/practiceapp/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\"; //Importing the custom hook from the utils folder.\n\nimport useUserStatus from \"./utils/useUserStatus\";\n\nfunction App() {\n  _s();\n\n  const [developerState, setDeveloperState] = useState({\n    excitementLevel: 1000,\n    lifeLongLearner: true,\n    name: \"Riley\"\n  }); // Destructing the state and method from the custom hook.\n\n  const {\n    statusState,\n    status\n  } = useUserStatus();\n  useEffect(() => {\n    //Display the value in the console. Initially it is empty.\n    console.log(statusState); //useEffect will trigger when the state changes.\n  }, [statusState]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Name: \", developerState.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Status: \", statusState]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Lifelong learner: \", developerState.lifeLongLearner.toString()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Excitement Level: \", developerState.excitementLevel]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"btn-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"status\",\n          children: \"Enter your Status: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control mb-4\",\n          id: \"status\" // Using JSX destructing on the status property from the custom hook will insert\n          // the value attribute and the onChange event handler.\n          ,\n          ...status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setDeveloperState({ ...developerState,\n          excitementLevel: developerState.excitementLevel + 1000\n        }),\n        className: \"btn btn-success\",\n        children: \"Increase Excitement Level\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setDeveloperState({ ...developerState,\n          excitementLevel: developerState.excitementLevel - 1000\n        }),\n        className: \"btn btn-success\",\n        children: \"Decrease Excitement Level\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"6/joHfubEW6GRHupFEG293ClOKE=\", false, function () {\n  return [useUserStatus];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/anthonygamon/git/practiceapp/src/App.js"],"names":["React","useState","useEffect","useUserStatus","App","developerState","setDeveloperState","excitementLevel","lifeLongLearner","name","statusState","status","console","log","toString"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,WAAP,C,CACA;;AACA,OAAOC,aAAP,MAA0B,uBAA1B;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCL,QAAQ,CAAC;AACnDM,IAAAA,eAAe,EAAE,IADkC;AAEnDC,IAAAA,eAAe,EAAE,IAFkC;AAGnDC,IAAAA,IAAI,EAAE;AAH6C,GAAD,CAApD,CADa,CAOb;;AACA,QAAM;AAAEC,IAAAA,WAAF;AAAeC,IAAAA;AAAf,MAA0BR,aAAa,EAA7C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd;AACAU,IAAAA,OAAO,CAACC,GAAR,CAAYH,WAAZ,EAFc,CAGd;AACD,GAJQ,EAIN,CAACA,WAAD,CAJM,CAAT;AAMA,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACE;AAAA,2BAAYL,cAAc,CAACI,IAA3B;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAGE;AAAA,6BAAcC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAA,uCAAwBL,cAAc,CAACG,eAAf,CAA+BM,QAA/B,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAA,uCAAwBT,cAAc,CAACE,eAAvC;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,eAME;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE;AAAM,QAAA,SAAS,EAAC,YAAhB;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,SAAS,EAAC,mBADZ;AAEE,UAAA,EAAE,EAAC,QAFL,CAGE;AACA;AAJF;AAAA,aAKMI;AALN;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAWE;AACE,QAAA,OAAO,EAAE,MACPL,iBAAiB,CAAC,EAChB,GAAGD,cADa;AAEhBE,UAAAA,eAAe,EAAEF,cAAc,CAACE,eAAf,GAAiC;AAFlC,SAAD,CAFrB;AAOE,QAAA,SAAS,EAAC,iBAPZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAXF,eAsBE;AACE,QAAA,OAAO,EAAE,MACPD,iBAAiB,CAAC,EAChB,GAAGD,cADa;AAEhBE,UAAAA,eAAe,EAAEF,cAAc,CAACE,eAAf,GAAiC;AAFlC,SAAD,CAFrB;AAOE,QAAA,SAAS,EAAC,iBAPZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAtBF;AAAA;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2CD;;GA3DQH,G;UAQyBD,a;;;KARzBC,G;AA6DT,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\n//Importing the custom hook from the utils folder.\nimport useUserStatus from \"./utils/useUserStatus\";\n\nfunction App() {\n  const [developerState, setDeveloperState] = useState({\n    excitementLevel: 1000,\n    lifeLongLearner: true,\n    name: \"Riley\",\n  });\n\n  // Destructing the state and method from the custom hook.\n  const { statusState, status } = useUserStatus();\n\n  useEffect(() => {\n    //Display the value in the console. Initially it is empty.\n    console.log(statusState);\n    //useEffect will trigger when the state changes.\n  }, [statusState]);\n\n  return (\n    <div className=\"card\">\n      <div>Name: {developerState.name}</div>\n      {/* JSX below to display the statusState from the hook. */}\n      <div>Status: {statusState}</div>\n      <div>Lifelong learner: {developerState.lifeLongLearner.toString()}</div>\n      <div>Excitement Level: {developerState.excitementLevel}</div>\n      <div className=\"btn-group\">\n        <form className=\"form-group\">\n          <label htmlFor=\"status\">Enter your Status: </label>\n          <input\n            className=\"form-control mb-4\"\n            id=\"status\"\n            // Using JSX destructing on the status property from the custom hook will insert\n            // the value attribute and the onChange event handler.\n            {...status}\n          />\n        </form>\n        <button\n          onClick={() =>\n            setDeveloperState({\n              ...developerState,\n              excitementLevel: developerState.excitementLevel + 1000,\n            })\n          }\n          className=\"btn btn-success\"\n        >\n          Increase Excitement Level\n        </button>\n        <button\n          onClick={() =>\n            setDeveloperState({\n              ...developerState,\n              excitementLevel: developerState.excitementLevel - 1000,\n            })\n          }\n          className=\"btn btn-success\"\n        >\n          Decrease Excitement Level\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}